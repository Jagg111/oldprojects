#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gamon.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GamonDB")]
	public partial class GameonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertAddon(Addon instance);
    partial void UpdateAddon(Addon instance);
    partial void DeleteAddon(Addon instance);
    #endregion
		
		public GameonDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GamonDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GameonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GameonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vw_GameWithAddon> vw_GameWithAddons
		{
			get
			{
				return this.GetTable<vw_GameWithAddon>();
			}
		}
		
		public System.Data.Linq.Table<vw_Addon> vw_Addons
		{
			get
			{
				return this.GetTable<vw_Addon>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<Addon> Addons
		{
			get
			{
				return this.GetTable<Addon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_GameWithAddons")]
	public partial class vw_GameWithAddon
	{
		
		private int _IDNumber;
		
		private string _Title;
		
		private string _Description;
		
		private string _Slug;
		
		private string _Cover;
		
		private System.Nullable<int> _NumAddons;
		
		public vw_GameWithAddon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this._IDNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this._Slug = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="VarChar(250)")]
		public string Cover
		{
			get
			{
				return this._Cover;
			}
			set
			{
				if ((this._Cover != value))
				{
					this._Cover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAddons", DbType="Int")]
		public System.Nullable<int> NumAddons
		{
			get
			{
				return this._NumAddons;
			}
			set
			{
				if ((this._NumAddons != value))
				{
					this._NumAddons = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Addons")]
	public partial class vw_Addon
	{
		
		private int _AddonID;
		
		private string _AddonName;
		
		private string _AddonDescription;
		
		private int _GameID;
		
		private string _GameTitle;
		
		private string _GameDescription;
		
		private string _GameSlug;
		
		private string _Avatar;
		
		private string _Cover;
		
		public vw_Addon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonID", DbType="Int NOT NULL")]
		public int AddonID
		{
			get
			{
				return this._AddonID;
			}
			set
			{
				if ((this._AddonID != value))
				{
					this._AddonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AddonName
		{
			get
			{
				return this._AddonName;
			}
			set
			{
				if ((this._AddonName != value))
				{
					this._AddonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddonDescription", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string AddonDescription
		{
			get
			{
				return this._AddonDescription;
			}
			set
			{
				if ((this._AddonDescription != value))
				{
					this._AddonDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					this._GameID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GameTitle
		{
			get
			{
				return this._GameTitle;
			}
			set
			{
				if ((this._GameTitle != value))
				{
					this._GameTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDescription", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string GameDescription
		{
			get
			{
				return this._GameDescription;
			}
			set
			{
				if ((this._GameDescription != value))
				{
					this._GameDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameSlug", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string GameSlug
		{
			get
			{
				return this._GameSlug;
			}
			set
			{
				if ((this._GameSlug != value))
				{
					this._GameSlug = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="VarChar(250)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this._Avatar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="VarChar(250)")]
		public string Cover
		{
			get
			{
				return this._Cover;
			}
			set
			{
				if ((this._Cover != value))
				{
					this._Cover = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Game")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNumber;
		
		private string _Title;
		
		private string _Description;
		
		private string _Slug;
		
		private string _Cover;
		
		private EntitySet<Addon> _Addons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNumberChanging(int value);
    partial void OnIDNumberChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnCoverChanging(string value);
    partial void OnCoverChanged();
    #endregion
		
		public Game()
		{
			this._Addons = new EntitySet<Addon>(new Action<Addon>(this.attach_Addons), new Action<Addon>(this.detach_Addons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="VarChar(250)")]
		public string Cover
		{
			get
			{
				return this._Cover;
			}
			set
			{
				if ((this._Cover != value))
				{
					this.OnCoverChanging(value);
					this.SendPropertyChanging();
					this._Cover = value;
					this.SendPropertyChanged("Cover");
					this.OnCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Addon", Storage="_Addons", ThisKey="IDNumber", OtherKey="GameID")]
		public EntitySet<Addon> Addons
		{
			get
			{
				return this._Addons;
			}
			set
			{
				this._Addons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addons(Addon entity)
		{
			this.SendPropertyChanging();
			entity.Game = this;
		}
		
		private void detach_Addons(Addon entity)
		{
			this.SendPropertyChanging();
			entity.Game = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addon")]
	public partial class Addon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNumber;
		
		private string _Name;
		
		private string _Description;
		
		private int _GameID;
		
		private string _Avatar;
		
		private EntityRef<Game> _Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNumberChanging(int value);
    partial void OnIDNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnGameIDChanging(int value);
    partial void OnGameIDChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    #endregion
		
		public Addon()
		{
			this._Game = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					if (this._Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGameIDChanging(value);
					this.SendPropertyChanging();
					this._GameID = value;
					this.SendPropertyChanged("GameID");
					this.OnGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="VarChar(250)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Addon", Storage="_Game", ThisKey="GameID", OtherKey="IDNumber", IsForeignKey=true)]
		public Game Game
		{
			get
			{
				return this._Game.Entity;
			}
			set
			{
				Game previousValue = this._Game.Entity;
				if (((previousValue != value) 
							|| (this._Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game.Entity = null;
						previousValue.Addons.Remove(this);
					}
					this._Game.Entity = value;
					if ((value != null))
					{
						value.Addons.Add(this);
						this._GameID = value.IDNumber;
					}
					else
					{
						this._GameID = default(int);
					}
					this.SendPropertyChanged("Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
